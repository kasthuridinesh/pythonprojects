{"name": "Test Single User API in reqres.in", "status": "broken", "statusDetails": {"message": "KeyError: 'https://reqres.in/#support-heading'", "trace": "self = <tests.test_users.TestUsers object at 0x000001B099BDF090>\n\n    @allure.title(\"Test Single User API in reqres.in\")\n    @allure.description(\"This test case is about testing the single user response dynamically for any user in the pages\")\n    def test_single_user_api(self):\n        self.logger.info(VerificationMessages.SINGLE_USER_VERIFICATION_START_MESSAGE)\n>       users.verify_single_user_response()\n\ntests\\test_users.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api_actions.users_api.UsersAPI object at 0x000001B099BDD990>\n\n    def verify_single_user_response(self):\n        user_id = test_utils.get_random_number_with_range(Constants.USER_ID_START, Constants.USER_ID_END)\n        user_id_string = str(user_id)\n        single_user_endpoint = Constants.SINGLE_USER_ENDPOINT.replace(Constants.ID_DYNAMIC_TEXT, user_id_string)\n        response = HTTPHandler.make_get_api_call(self, single_user_endpoint)\n        response_json = response.json()\n    \n        # Fetching 'data' key-values\n        api_response_dict = response_json[APIKeysConstants.DATA_KEY]\n    \n        # Verifying User ID key-value\n        actual_user_id = api_response_dict[APIKeysConstants.ID_KEY]\n    \n        user_dict = test_data_handler.get_user_by_id(user_id)\n        expected_user_id = user_dict[APIKeysConstants.ID_KEY]\n    \n        Verify.verify_number(self, actual_user_id, expected_user_id, InfoMessages.VERIFY_ID_MESSAGE)\n    \n        # Verifying Email key-value\n        actual_email_id = api_response_dict[APIKeysConstants.EMAIL_KEY]\n    \n        expected_email_id = user_dict[APIKeysConstants.EMAIL_KEY]\n    \n        Verify.verify_string(self, actual_email_id, expected_email_id, InfoMessages.VERIFY_EMAIL_MESSAGE)\n    \n        # Verifying First Name key-value\n        actual_first_name = api_response_dict[APIKeysConstants.FIRST_NAME_KEY]\n    \n        expected_first_name = user_dict[APIKeysConstants.FIRST_NAME_KEY]\n    \n        Verify.verify_string(self, actual_first_name, expected_first_name, InfoMessages.VERIFY_FIRST_NAME_MESSAGE)\n    \n        # Verifying Last Name key-value\n        actual_last_name = api_response_dict[APIKeysConstants.LAST_NAME_KEY]\n    \n        expected_last_name = user_dict[APIKeysConstants.LAST_NAME_KEY]\n    \n        Verify.verify_string(self, actual_last_name, expected_last_name, InfoMessages.VERIFY_LAST_NAME_MESSAGE)\n    \n        # Verifying Avatar key-value\n        actual_avatar = api_response_dict[APIKeysConstants.AVATAR_KEY]\n    \n        expected_avatar = user_dict[APIKeysConstants.AVATAR_KEY]\n    \n        Verify.verify_string(self, actual_avatar, expected_avatar, InfoMessages.VERIFY_AVATAR_MESSAGE)\n        print(\"--------------------------------------------------------------------\")\n        # Fetching 'support' key-values\n        api_response_dict = response_json[APIKeysConstants.SUPPORT_KEY]\n    \n        # Verifying 'support' URL key-value\n>       actual_support_url = api_response_dict[APIKeysConstants.URL_KEY]\nE       KeyError: 'https://reqres.in/#support-heading'\n\napi_actions\\users_api.py:63: KeyError"}, "description": "This test case is about testing the single user response dynamically for any user in the pages", "attachments": [{"name": "log", "source": "ddbe95f0-848e-49b5-b73b-6a74a8a6493d-attachment.txt", "type": "text/plain"}], "start": 1678089031423, "stop": 1678089031687, "uuid": "93a4f5b9-edc5-4ddd-856e-1e98fcca7a78", "historyId": "e96f6bbfa56f9b5c3c450d7195164bfe", "testCaseId": "34cdd6d9971a821d13514e8d087133c3", "fullName": "tests.test_users.TestUsers#test_single_user_api", "labels": [{"name": "tag", "value": "run"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_users"}, {"name": "subSuite", "value": "TestUsers"}, {"name": "host", "value": "ATMECSCBELT-019"}, {"name": "thread", "value": "6592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_users"}]}